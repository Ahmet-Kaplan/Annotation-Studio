<script type="text/template" id="annotation-template">
	<ul class="annotation-list">
			{{#rows}}
				<li><a id="sb{{id}}" href="#hl{{id}}" rel="tooltip" title="{{user}}" class="highlightlink">{{quote}}</a></li>
			{{/rows}}
	</ul>
</script>
<script src="http://cdnjs.cloudflare.com/ajax/libs/jquery/1.7.2/jquery.min.js"></script>
<script src="http://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.3.3/underscore-min.js"></script>
<script src="http://cdnjs.cloudflare.com/ajax/libs/backbone.js/0.9.2/backbone-min.js"></script>
<script src="http://cdnjs.cloudflare.com/ajax/libs/mustache.js/0.4.2/mustache.min.js"></script>
<script>
	PX = window.PX || {};

	// model
	PX.Annotation = Backbone.Model.extend({
		defaults: {
			user: null,
			quote: null,
			text: null,
			id: null,
			start: null, 
			_id: null,
			annotator_schema_version: "v1.0",
			consumer: "annotationstudio.org",
			created: null,
			updated: null,
			highlights: {},
			permissions: {},
			ranges: {},
			tags: {},
			uri: null
		}
	});

	// collection
	(function () {
		var AnnotationList;

		AnnotationList = Backbone.Collection.extend({
			model: PX.Annotation,
			url: 'http://annotations.herokuapp.com/api/search?uri=' + window.location,
			initialize: function () {
				this.fetch({
					  success: this.fetchSuccess,
					  error: this.fetchError
				});
				this.deferred = new $.Deferred();
			},
			deferred: Function.constructor.prototype,
			fetchSuccess: function (collection, response) {
				collection.deferred.resolve();
			},
			fetchError: function (collection, response) {
				throw new Error("Annotations fetch did get collection from API");
			}
		});

		PX.annotations = new AnnotationList();
		AnnotationList = null;
	}());


	PX.AnnotationView = Backbone.View.extend({
		initialize: function (options) {
			this.template = $('#annotation-template').html();
		},
		render: function () {
			var markup = Mustache.to_html(this.template, this.model.toJSON());
			this.$el.html(markup).attr('id',this.model.get('_id'));
			return this;
		}
	});

	PX.AnnotationListView = Backbone.View.extend({
		className: "annotations",
		initialize: function (options) {
		    this.well = options.well;
		},
		render: function () {
			var i, len = this.collection.length;
			for (i=0; i < len; i++) {
				this.renderItem(this.collection.models[i]);
			};
			// For some reason, this doesn't work:
			// $(this.well).find(this.className).remove();
			// So for now, I'll hard-code the class to remove.
			$(this.well).find(".annotations").remove();
			this.$el.appendTo(this.options.well);

			$('a.highlightlink').tooltip({placement:'right'});

			// TODO: make the LI the click target, not the finicky little a tag.
			$("a.highlightlink").click(function(event){		
				event.preventDefault();
				$("a.highlightlink").tooltip('hide');
				// $(".annotator-hl").tooltip('hide');
				$("ul.annotation-list li").removeClass('hover');
				var idtarget = this.hash;
				$('html,body').animate({scrollTop: $(idtarget).offset().top - 150}, 2000, function() {
					// var tipTarget = "span"+idtarget+".annotator-hl"; 
					// $(tipTarget).tooltip('show'); // to show a tooltip on click -- instead, let's show the annotator viewer.
				});
			});
			
			return this;
		},
		renderItem: function (model) {
			var item = new PX.AnnotationView({
				"model": model
			});
			item.render().$el.appendTo(this.$el);
		}
	});

	// application
	PX.App = Backbone.Router.extend({
		routes: {
			"/": "listAnnotations",
			"list": "listAnnotations", 
			'highlight:*id':  'highlight',
			'*path':  'defaultRoute',
		},
		//initialize: function (options) {},
		listAnnotations: function () {
			var annotationsList = new PX.AnnotationListView({
				"well": $('.well'),
				"collection": PX.annotations
			});
			PX.annotations.deferred.done(function () {
				annotationsList.render();
			});
		},
		highlight: function(id) {
			var annotationSelector = "#" + id;
		},
		defaultRoute: function(path) {
			this.listAnnotations();
		}
	});

	// bootstrap
	PX.app = new PX.App();
	Backbone.history.start();
</script>
