          <%= form_for (@document), :html => { :role => 'form', class: "confirm-changes" } do |f| %>
<%= render 'document_content', f: f %>

          	<h4>Metadata</h4>

          	<div class="row">
          		<div class="col-md-6">
          			<div class="form-group">
          				<%= f.label :title %>
            			<%= f.text_field :title, :class => 'form-control' %>
          			</div>

          			<div class="form-group">
          				<%= f.label :author %>
          				<%= f.text_field :author, :class => 'form-control' %>
          			</div>

					<div class="form-group">
						<%= f.label :publication_date %>
						<%= f.text_field :publication_date, :class => 'form-control' %>
					</div>

					<div class="form-group">
						<%= f.label :publisher %>
						<%= f.text_field :publisher, :class => 'form-control' %>
					</div>
				</div><!-- end span 6 -->

          		<div class="col-md-6">
					<div class="form-group">
						<%= f.label :edition, "Edition/Volume" %>
						<%= f.text_field :edition, :class => 'form-control' %>
					</div>

          			<div class="form-group">
          				<%= f.label :source %>
          				<%= f.text_field :source, :class => 'form-control' %>
          			</div>

          			<div class="form-group">
          				<%= f.label :rights_status %>
          				<%= f.select :rights_status, [ 'Copyrighted', 'Public Domain', 'Creative Commons'], {}, {:class => 'form-control'} %>
          			</div>
          		</div><!-- end span 6 -->
          	</div><!-- end row -->

			  <div class="row">
				  <div class="col-md-6">
          	<h4>Status</h4>
          	<div class="form-group">
              <table class="help-block">
                <tr><th></th><th><i class="glyphicon glyphicon-eye-open"></i> View</th><th><i class="glyphicon glyphicon-edit"></i> Edit</th><th><i class="glyphicon glyphicon-comment"></i> Annotate</th></tr>
                <tr>
                  <th><i class="glyphicon glyphicon-user"></i> Me</th>
                  <th><i class="glyphicon glyphicon-ok"></i></th>
                  <th><i class="glyphicon glyphicon-ok"></i></th>
                  <th><i class="glyphicon glyphicon-remove"></i></th>
                </tr>
                <tr>
                  <th><i class="glyphicon glyphicon-blackboard"></i> <%= ENV["CLASS_TERM_PLURAL"].capitalize %></th>
                  <th><i class="glyphicon glyphicon-ok"></i></th>
                  <th><i class="glyphicon glyphicon-remove"></i></th>
                  <th><i class="glyphicon glyphicon-remove"></i></th>
                </tr>
                <% if can? :publish, Document %>
                  <tr>
                    <th><i class="glyphicon glyphicon-globe"></i> Public</th>
                    <th><i class="glyphicon glyphicon-remove"></i></th>
                    <th><i class="glyphicon glyphicon-remove"></i></th>
                    <th><i class="glyphicon glyphicon-remove"></i></th>
                  </tr>
                <% end %>
              </table>
                <div class="radio">
                  <label>
                    <%= f.radio_button :state, "draft", checked: controller.action_name == "new" ? true : @document.draft?, disabled: !@document.draft? && controller.action_name == "edit" %>
                    <i class="glyphicon glyphicon-pencil"></i> Draft
                  </label>
                </div>
                <div class="radio">
                  <label>
                    <%= f.radio_button :state, "published", checked: @document.published? %>
                    <i class="glyphicon glyphicon-comment"></i> Published <b>*</b>
                  </label>
                </div>
                <% if can? :archive, Document %>
                <div class="radio">
                  <label>
                    <%= f.radio_button :state, "archived", checked: @document.archived? %>
                    <i class="glyphicon glyphicon-folder-close"></i> Archived <b>*</b>
                  </label>
                </div>
                <% end %>
                <% if current_user.has_role? :admin %>
                <div class="radio">
                  <label>
                    <%= f.radio_button :state, "public", checked: @document.public? %>
                    <i class="glyphicon glyphicon-globe"></i> Public <b>*</b>
                  </label>
                </div>
                <% end %>
          	</div>
            <div class="draftnote"><b>* Note:</b>
              <% if current_user.has_role? :admin %>
                <% @docStatusAdmin = "a status marked with an asterisk (*)" %>
              <% else %>
                <% @docStatusAdmin = "Published or Archived" %>
              <% end %>
              <label class="draftnote">
              If you set the document to <%= @docStatusAdmin %>, you will no longer be able to edit its content, and you cannot revert back to Draft. You will still be able to edit metadata and status. Make sure your document is finalized before choosing a status other than Draft.
              </label>
            </div>

				  </div><!-- end span 6 -->

			  <div class="col-md-6">
          	<h4><%= ENV["CLASS_TERM_PLURAL"].capitalize %></h4>
          	<p class="help-block">Enter the <%= ENV["CLASS_TERM_PLURAL"] %> to which you wish to assign this document, <strong>and press enter after each.</strong></p>
          	<div class="form-group">
          	<%= f.text_field :rep_group_list, :value => @document.rep_group_list.join(', '), :class => 'form-control', 'data-role' => "tagsinput", 'placeholder' => ENV["CLASS_TERM_PLURAL"] %>
          	</div>

            <h4>New Groups (Testing) </h4>
            <p class="help-block">Select the (new) group to which you wish to assign this document. </p>
            <div class="form-group">
                <!-- can only do one at a time. rn. more research on multiple inputs -->

                <% @groups = current_user.groups %>
            <%= select_tag "groups", options_from_collection_for_select(@groups, "id", "name"), include_blank: true %>
            
            </div>




			  </div><!-- end span 6 -->
			  </div><!-- end row -->

            <%= f.submit nil, :class => 'btn btn-default btn btn-default-primary btn-primary' %>
          	<%= link_to 'Cancel', documents_url, :class => 'btn btn-default' %>
          <% end %>

          <script type="text/javascript">
          $(document).ready(function() {

            $('.text-area').summernote({
              height: 300,                 // set editor height
              minHeight: null,             // set minimum height of editor
              maxHeight: null,             // set maximum height of editor
              cleaner:{
                  action: 'paste', // both|button|paste 'button' only cleans via toolbar button, 'paste' only clean when pasting content, both does both options.
                  newline: '<br>', // Summernote's default is to use '<p><br></p>'
                  notStyle: 'position:absolute;top:0;left:0;right:0', // Position of Notification
                  keepHtml: true, // Remove all Html formats
                  keepOnlyTags: ['<p>', '<br>', '<ul>', '<li>', '<b>', '<strong>','<i>', '<a>'], // If keepHtml is true, remove all tags except these
                  keepClasses: true, // Remove Classes
                  badTags: ['script', 'applet', 'embed', 'noframes', 'noscript'], // Remove full tags with contents
                  badAttributes: ['start'], // Remove attributes from remaining tags
                  limitChars: false, // 0/false|# 0/false disables option
                  limitDisplay: 'text', // text|html|both
                  limitStop: false // true/false
                }
            });
            $('.chapter-area').summernote({
                height: 300,
                minHeight: null,
                maxHeight: null,
                cleaner:{
                    action: 'paste', // both|button|paste 'button' only cleans via toolbar button, 'paste' only clean when pasting content, both does both options.
                    newline: '<br>', // Summernote's default is to use '<p><br></p>'
                    notStyle: 'position:absolute;top:0;left:0;right:0', // Position of Notification
                    keepHtml: true, // Keep or remove all Html formats
                    keepOnlyTags: ['<p>', '<br>', '<ul>', '<li>', '<b>', '<strong>','<i>', '<a>'], // If keepHtml is true, remove all tags except these
                    keepClasses: false, // Keep or remove Classes
                    badTags: ['style', 'script', 'applet', 'embed', 'noframes', 'noscript', 'html'], // Remove full tags with contents
                    badAttributes: ['style', 'start'], // Remove attributes from remaining tags
                    limitChars: false, // 0/false|# 0/false disables option
                    limitDisplay: 'both', // text|html|both
                    limitStop: false // true/false
                  }
            });
            $('#chapter-editor').hide();
            $('#chapter-label').click(function(){
              $("[data-event='codeview']").click()
              $('#chapter-editor').toggle();
            });

            // handle catalog texts

            var text = {};

            $('.clickable').on('click', function (e) {
                var id = $( this ).attr( "id" );
                var entry = text[ id ];
                $( "#document_title").val( entry['name'] );
                $( "#document_author").val( entry[ 'author'] );
                $( "#document_edition").val( entry[ 'edition'] );
                $( "#document_publisher").val( entry[ 'publisher'] );
                $( "#document_publication_date").val( entry[ 'publication_date'] );
                $( "#document_source").val( entry[ 'manuscript'] );
                $( "#document_rights_status").val( entry[ 'permissions'] );
                $( ".note-editable").html( "EID:" + id );
            })

            // Document status permissions table management
            var permissionsTable = $("table.help-block tbody")[0];
            manageTable(permissionsTable);
            $('input:radio').change(
              function(){
                manageTable(permissionsTable);
              });

            // Show or hide "Classes" permissions depending on if classes are assigned
            showHideClasses(permissionsTable);
            var tagFields = $('.bootstrap-tagsinput');
            var tagLabels = $('.bootstrap-tagsinput span.tag.label.label-info');
            tagFields.bind("keyup change click", function(){showHideClasses(permissionsTable);});
            tagLabels.bind("keyup change click",function(){showHideClasses(permissionsTable);});

            <% unless (current_user.has_role? :admin) %>
              $(permissionsTable.rows[3]).children().attr('style','display:none');
              $(permissionsTable.rows[2]).children().attr('style','border-bottom:1px solid #BBB');
            <% end %>
          });

          function manageTable(table){
            var tableState = '';
            var cell;
            if($('#document_state_draft').prop("checked") == true)
              tableState = '110000000'
            else if($('#document_state_published').prop("checked") == true)
              tableState = '101101000';
            else if($('#document_state_archived').prop("checked") == true)
              tableState = '100100000';
            else if($('#document_state_public').prop("checked") == true)
              tableState = '100100100';
            for (var j = 0; j < 3; j++){
              for(var k = 0; k < 3; k++){
                cell = $(table.rows[j+1].cells[k+1]).children();
                if(!!+tableState.charAt(k+(3*j)) == true)
                  cell.attr('class','glyphicon glyphicon-ok');
                else
                  cell.attr('class','glyphicon glyphicon-remove');
              }
            }
          }

          function showHideClasses(table){
            if ($('.bootstrap-tagsinput span.tag.label.label-info').length == 0){
              $(table.rows[2]).attr('style','display:none');
              $(table.rows[1]).attr('style','border-bottom:1px solid #BBB');
            }
            else{
              $(table.rows[2]).attr('style','border-bottom:1px solid #BBB');
              $(table.rows[1]).attr('style','border-bottom: none');
            }
          }

          </script>
